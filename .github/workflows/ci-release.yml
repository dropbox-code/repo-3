name: Publish release

on:
  release:
    types:
      - published

jobs:
  publish-release:
    runs-on: ubuntu-latest

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@2e205a28d0e1da00c5f53b161f4067b052c61f34
      with:
        egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

    - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      with:
        submodules: true

    - name: Fetch git tags
      run: |
        git fetch --prune --unshallow --tags

    - uses: actions/setup-go@268d8c0ca0432bb2cf416faae41297df9d262d7f
      with:
        go-version: 1.19.x

    - uses: actions/setup-node@969bd2663942d722d85b6a8626225850c2f7be4b
      with:
        node-version: '16'

    - name: Export BRANCH variable
      uses: ./.github/actions/setup-branch

    - name: Install tools
      run: make install-ci

    - name: Build binaries
      id: build-binaries
      run: make build-all-platforms

    - name: Package binaries
      id: package-binaries
      run: bash scripts/package-deploy.sh
      if: steps.build-binaries.outcome == 'success'

    - name: Upload binaries
      uses: svenstaro/upload-release-action@133984371c30d34e38222a64855679a414cb7575
      with:
        file: '{deploy/*.tar.gz,deploy/*.zip,deploy/*.sha256sum.txt}'
        file_glob: true
        tag: ${{ github.ref }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
      if: steps.package-binaries.outcome == 'success'

    - uses: docker/setup-qemu-action@8b122486cedac8393e77aa9734c3528886e4a1a8

    - name: Build and upload all docker images
      run: bash scripts/build-upload-docker-images.sh
      env:
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        QUAY_TOKEN: ${{ secrets.QUAY_TOKEN }}

    - name: Build, test, and publish all-in-one image
      run: bash scripts/build-all-in-one-image.sh
      env:
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        QUAY_TOKEN: ${{ secrets.QUAY_TOKEN }}

    - name: Build, test, and publish hotrod image
      run: bash scripts/hotrod-integration-test.sh
      env:
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        QUAY_TOKEN: ${{ secrets.QUAY_TOKEN }}

    - name: SBOM Generation
      uses: anchore/sbom-action@v0
      with:
        artifact-name: jaeger-SBOM.spdx.json
